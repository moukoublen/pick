# yaml-language-server: $schema=https://json.schemastore.org/github-workflow.json
name: Benchmarks

on:
  # pull_request:
  #   branches: [ main ]
  # push:
  #   branches: [ main ]
  workflow_dispatch: {}
  # https://docs.github.com/en/actions/reference/workflows-and-actions/events-that-trigger-workflows#workflow_dispatch
  # https://docs.github.com/en/actions/reference/workflows-and-actions/workflow-syntax#onworkflow_dispatch

jobs:

  benchmark:
    name: Benchmarks
    runs-on: ubuntu-latest
    timeout-minutes: 120
    env:
      BENCH_DIR: /tmp/bench
    steps:

    # https://github.com/actions/setup-go
    - name: set up go
      uses: actions/setup-go@v6
      with:
        go-version: "1.24.x"
        check-latest: true
        cache: false

    # https://github.com/actions/checkout
    - uses: actions/checkout@v5
      name: Checkout main
      with:
        fetch-depth: 2

    # https://docs.github.com/en/actions/reference/workflows-and-actions/contexts#github-context
    - name: Prepare comparison with main branch
      if: github.ref_name != 'main'
      shell: bash
      run: |
        git fetch origin main
        echo "COMPARE_WITH=main" >> $GITHUB_ENV
    - name: Prepare comparison with previous commit
      if: github.ref_name == 'main'
      shell: bash
      run: |
        echo "COMPARE_WITH=$(git rev-parse HEAD~1)" >> $GITHUB_ENV

    - name: Benchmark and Compare
      shell: bash
      run: |
        rm -rf ${{ env.BENCH_DIR }}
        mkdir -p ${{ env.BENCH_DIR }}

        git log -1
        rm -rf ${{ env.BENCH_DIR }}/head.txt
        make ci-bench | tee ${{ env.BENCH_DIR }}/head.txt

        git checkout "${COMPARE_WITH}"
        git log -1
        rm -rf ${{ env.BENCH_DIR }}/prev.txt
        make ci-bench | tee ${{ env.BENCH_DIR }}/prev.txt

        go install golang.org/x/perf/cmd/benchstat@latest

        benchstat ${{ env.BENCH_DIR }}/prev.txt ${{ env.BENCH_DIR }}/head.txt | tee ${{ env.BENCH_DIR }}/summary.txt
        echo '# Benchmarks stats' >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
        cat ${{ env.BENCH_DIR }}/summary.txt >> $GITHUB_STEP_SUMMARY
        echo '```' >> $GITHUB_STEP_SUMMARY
