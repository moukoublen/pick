name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:

  lint:
    runs-on: ubuntu-latest
    steps:

    # https://github.com/actions/checkout
    - uses: actions/checkout@v4

    # https://github.com/actions/setup-go
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.21'
        check-latest: true
        cache: true

    # https://github.com/actions/cache
    - name: Cache Tools
      id: cache-tools
      uses: actions/cache@v4
      with:
        path: |
          .tools/
          ~/.cache/go-build
          ~/go/pkg/mod
        key: ci-tools-${{ runner.os }}-${{ hashFiles('**/go.sum', '**/Makefile') }}
        restore-keys: |
          ci-tools-${{ runner.os }}

    - name: Install Tools
      # if: steps.cache-tools.outputs.cache-hit != 'true'
      run: make tools

    - name: go mod verify
      run: go mod verify

    - name: version of make
      run: make --version

    - name: env
      run: make env

    - name: gofumpt
      run: make gofumpt

    - name: goimports
      run: make goimports

    - name: staticcheck
      run: make staticcheck

    - name: golangci-lint
      run: make golangci-lint-github-actions

  test:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        go-version: [ '1.21', '1.22' ]
    steps:
    - uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go-version }}
        check-latest: true
        cache: true

    - name: Test
      run: make test

    # https://github.com/codecov/codecov-action
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v4
      env:
        CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
      if: matrix.go-version == '1.22'
